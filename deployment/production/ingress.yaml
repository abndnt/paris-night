apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: flight-search-ingress
  namespace: flight-search-prod
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://flightsearch.com"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
spec:
  tls:
  - hosts:
    - flightsearch.com
    - api.flightsearch.com
    secretName: flight-search-tls
  rules:
  - host: flightsearch.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: flight-search-frontend-service
            port:
              number: 80
  - host: api.flightsearch.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: flight-search-backend-service
            port:
              number: 3000