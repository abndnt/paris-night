apiVersion: v1
kind: ConfigMap
metadata:
  name: performance-monitoring-config
  namespace: flight-search-prod
data:
  jaeger-config.yaml: |
    apiVersion: jaegertracing.io/v1
    kind: Jaeger
    metadata:
      name: flight-search-jaeger
      namespace: flight-search-prod
    spec:
      strategy: production
      storage:
        type: elasticsearch
        elasticsearch:
          nodeCount: 3
          storage:
            size: 50Gi
          resources:
            requests:
              memory: "2Gi"
              cpu: "1000m"
            limits:
              memory: "4Gi"
              cpu: "2000m"
      collector:
        replicas: 2
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
      query:
        replicas: 2
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elasticsearch-performance
  namespace: flight-search-prod
spec:
  replicas: 3
  selector:
    matchLabels:
      app: elasticsearch-performance
  template:
    metadata:
      labels:
        app: elasticsearch-performance
    spec:
      containers:
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
        ports:
        - containerPort: 9200
        - containerPort: 9300
        env:
        - name: cluster.name
          value: "flight-search-performance"
        - name: node.name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: discovery.seed_hosts
          value: "elasticsearch-performance-0.elasticsearch-performance,elasticsearch-performance-1.elasticsearch-performance,elasticsearch-performance-2.elasticsearch-performance"
        - name: cluster.initial_master_nodes
          value: "elasticsearch-performance-0,elasticsearch-performance-1,elasticsearch-performance-2"
        - name: ES_JAVA_OPTS
          value: "-Xms2g -Xmx2g"
        - name: xpack.security.enabled
          value: "false"
        volumeMounts:
        - name: elasticsearch-data
          mountPath: /usr/share/elasticsearch/data
        resources:
          requests:
            memory: "3Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
      volumes:
      - name: elasticsearch-data
        persistentVolumeClaim:
          claimName: elasticsearch-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: elasticsearch-pvc
  namespace: flight-search-prod
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-performance
  namespace: flight-search-prod
spec:
  selector:
    app: elasticsearch-performance
  ports:
  - name: http
    port: 9200
    targetPort: 9200
  - name: transport
    port: 9300
    targetPort: 9300
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apm-server
  namespace: flight-search-prod
spec:
  replicas: 2
  selector:
    matchLabels:
      app: apm-server
  template:
    metadata:
      labels:
        app: apm-server
    spec:
      containers:
      - name: apm-server
        image: docker.elastic.co/apm/apm-server:8.8.0
        ports:
        - containerPort: 8200
        env:
        - name: output.elasticsearch.hosts
          value: "elasticsearch-performance:9200"
        - name: apm-server.host
          value: "0.0.0.0:8200"
        - name: setup.kibana.host
          value: "kibana:5601"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /
            port: 8200
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 8200
          initialDelaySeconds: 10
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: apm-server
  namespace: flight-search-prod
spec:
  selector:
    app: apm-server
  ports:
  - port: 8200
    targetPort: 8200
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: flight-search-prod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      containers:
      - name: kibana
        image: docker.elastic.co/kibana/kibana:8.8.0
        ports:
        - containerPort: 5601
        env:
        - name: ELASTICSEARCH_HOSTS
          value: "http://elasticsearch-performance:9200"
        - name: SERVER_NAME
          value: "kibana"
        - name: SERVER_HOST
          value: "0.0.0.0"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /api/status
            port: 5601
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /api/status
            port: 5601
          initialDelaySeconds: 30
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: kibana
  namespace: flight-search-prod
spec:
  selector:
    app: kibana
  ports:
  - port: 5601
    targetPort: 5601
  type: ClusterIP